Mô phỏng ca sử dụng Maintain Timecard bằng Java


// Lớp đại diện cho thông tin nhân viên
class Employee {
    private int employeeId;
    private String name;
    private Timecard currentTimecard;

    public Employee(int id, String name) {
        this.employeeId = id;
        this.name = name;
    }

    public Timecard getCurrentTimecard() {
        return currentTimecard;
    }

    public void createNewTimecard() {
        this.currentTimecard = new Timecard();
    }

    public void submitTimecard() {
        if (currentTimecard != null) {
            currentTimecard.submit();
        }
    }
}

// Lớp đại diện cho bảng thời gian làm việc
class Timecard {
    private boolean isSubmitted = false;
    private Map<String, Integer> hoursWorked; // Ngày làm việc và giờ làm

    public Timecard() {
        hoursWorked = new HashMap<>();
    }

    public void addHours(String date, int hours) {
        if (!isSubmitted && hours <= 24) {
            hoursWorked.put(date, hours);
        } else {
            System.out.println("Error: Cannot add hours, timecard is submitted or hours exceed limit.");
        }
    }

    public void submit() {
        if (!isSubmitted) {
            isSubmitted = true;
            System.out.println("Timecard submitted successfully.");
        }
    }

    public boolean isSubmitted() {
        return isSubmitted;
    }
}

// Lớp mô phỏng việc chạy chương trình chính
public class PayrollSystem {
    public static void main(String[] args) {
        Employee employee = new Employee(1, "John Doe");

        // Tạo một timecard mới
        employee.createNewTimecard();

        // Thêm giờ làm việc vào bảng
        employee.getCurrentTimecard().addHours("2024-11-04", 8);
        employee.getCurrentTimecard().addHours("2024-11-05", 7);

        // Gửi timecard
        employee.submitTimecard();
    }
}
